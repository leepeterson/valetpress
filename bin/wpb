#!/bin/bash
version="2018.09.30"

# Added for debugging
set -euo pipefail
IFS=$'\n\t'

# Colors
NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2; tput bold)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)

function red() {
	echo -e "$RED$*$NORMAL"
}
function green() {
	echo -e "$GREEN$*$NORMAL"
}
function yellow() {
	echo -e "$YELLOW$*$NORMAL"
}
function blue() {
	echo -e "$BLUE$*$NORMAL"
}
function magenta() {
	echo -e "$MAGENTA$*$NORMAL"
}
function cyan() {
	echo -e "$CYAN$*$NORMAL"
}
function white() {
	echo -e "$WHITE$*$NORMAL"
}

# Core WordPress install function
wordpress_installer () {
	wp core config --dbname="$project_name" --dbuser=root --dbhost=127.0.0.1 --quiet --extra-php <<PHP
define( 'WP_DEBUG', false );
define( 'WP_DEBUG_LOG', false );
define( 'FS_METHOD', 'direct' );
define( 'WP_SITEURL', 'http://$project_name.$wpb_domain/' );
define( 'WP_HOME', 'http://$project_name.$wpb_domain/' );
PHP
	green "wp-config.php has been generated."
	wp db create --quiet
	green "Database created."
	wp core install --url="$project_name"."$wpb_domain" --title="$project_name"."$wpb_domain" --admin_user="$wp_admin_user" --admin_password="$wp_admin_password" --admin_email="$wp_admin_email" --quiet
	green "WordPress has been installed."
	cd "$sites_folder"/"$project_name"/
}

# Output WordPress login info
wordpress_login_info () {
	white "==================================================================="
	green "Project Created: http://$project_name.$wpb_domain/"
	cyan "Login: http://$project_name.$wpb_domain/wp-login.php"
	cyan "Username: $wp_admin_user"
	cyan "Password: $wp_admin_password"
	if [ "$open_browser" = 1 ]; then
		open -a "$browser" -g http://$project_name.$wpb_domain/wp-login.php
	fi
	if [ "$livereload" = 1 ]; then
		yellow "Added to LiveReload."
		open "livereload:add?path="$sites_folder"/"$project_name"/"
	fi
	echo " "
}

# Plugin add/remove function
plugin_activation () {
	# Detect if plugins should be added
	if [ ! -z "$plugins_add" -a "$plugins_add" != " " ]; then
			green "Installing plugins."
			echo $plugins_add | xargs wp plugin install --quiet
			yellow "$plugins_add added to install."
	fi
	# Detect if plugins should be removed
	if [ ! -z "$plugins_remove" -a "$plugins_remove" != " " ]; then
	        red "Removing plugins."
			echo $plugins_remove | xargs wp plugin delete --quiet
			red "$plugins_remove removed from install"
	fi
	# Activate all installed plugins
	wp plugin activate --all --quiet
	green "Plugins have been activated."
}

# Get WP-Brew install directory
wpb_path="$(cd "$(dirname "$0")" && pwd)"

# Get config variables
wp_admin_user=$(cat $wpb_path/config.json|jq -r .wp_admin_user)
wp_admin_email=$(cat $wpb_path/config.json|jq -r .wp_admin_email)
wp_admin_password=$(cat $wpb_path/config.json|jq -r .wp_admin_password)
sites_folder=$(cat $wpb_path/config.json|jq -r .sites_folder)
open_browser=$(cat $wpb_path/config.json|jq -r .open_browser)
browser=$(cat $wpb_path/config.json|jq -r .browser)
wpb_domain=$(cat $wpb_path/config.json|jq -r .wpb_domain)
plugins_add=$(cat $wpb_path/config.json|jq -r .plugins_add)
plugins_remove=$(cat $wpb_path/config.json|jq -r .plugins_remove)
livereload=$(cat $wpb_path/config.json|jq -r .livereload)

# WP-Brew Commands
if [ $# -lt 1 ] || [ "$1" = "help" ] || [ -z "$1" ];then
	clear
	white "WP-Brew $version"
	cyan "  wpb create - Create fresh WordPress install. "
	cyan "  wpb delete - Delete an existing WordPress project. "
	cyan "  wpb help   - Display WP-Brew help screen. "
	echo " "
	exit 1;
else
	# WP-Brew create option
	if [ "$1" = "create" ]; then
		white "Please enter the name of your project."
		read -p ": " -r project_name
		cd "$sites_folder"

		# Delete existing project if detected
		if [ -d "$project_name" ]; then
			cd "$project_name"
			wp db drop --yes
			cd ..
			rm -rf "$project_name"
			red "Previous Project Deleted: $project_name"
		fi

		# Create new project folder
		mkdir "$project_name"
		cd "$project_name"

		# Select install method
		white "How do you wish to install WordPress? "
		cyan " 1.) Default WordPress Install "
		cyan " 2.) WordPress with specific theme "
		read -p "Choice: " -r create_choice

			# Default WordPress Install
			if [ "$create_choice" = 1 ]; then
				yellow "Downloading WordPress."
				wp core download --quiet
				green "WordPress have been downloaded."
				wordpress_installer
				cp -R $wpb_path/plugins/ $sites_folder/$project_name/wp-content/plugins/
				plugin_activation
				wordpress_login_info
			fi

			# WordPress install with specific theme
			if [ "$create_choice" = 2 ]; then
				yellow "Theme Location eg ~/Downloads/theme.zip "
				read -r theme_location
				yellow "Downloading WordPress."
				wp core download --skip-content --quiet
				green "WordPress has been downloaded."
				mkdir $sites_folder/"$project_name"/wp-content/plugins/
				wordpress_installer
				wp theme install $theme_location --activate
				cp -R $wpb_path/plugins/ $sites_folder/$project_name/wp-content/plugins/
				plugin_activation
				wordpress_login_info
			fi
	fi

	# WP-Brew delete option
	if [ "$1" = "delete" ]; then
		if [ "$(ls -A "$sites_folder")" ]; then
			cd "$sites_folder"
			red "WP-Brew, delete a project "
			ls -d */ | cut -f1 -d'/'
			cyan "Project that you wish to delete"
			read -r project_name
			red "Are you sure you want to delete $project_name ? (y/N)"
			read -r delete_confirm
			delete_confirm_converted=$( echo "$delete_confirm" | tr "[:upper:]" "[:lower:]" )

			if [ "$delete_confirm_converted" = "y" ]; then
				if [ "$livereload" = 1 ]; then
					red "Removing from LiveReload"
					open "livereload:remove?path="$sites_folder"/"$project_name"/"
				fi
				cd "$project_name"
				wp db drop --yes --quiet
				red "Database has been dropped."
				cd ..
				rm -rf "$project_name"
				red "Project files deleted."
				green "Success: $project_name deleted"
			fi
		else
			magenta "No WordPress installs detected. "
		fi
	fi
fi
